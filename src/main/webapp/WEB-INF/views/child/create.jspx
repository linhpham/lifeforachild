<div xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:form="http://www.springframework.org/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:spring="http://www.springframework.org/tags" version="2.0">
    <jsp:output omit-xml-declaration="yes"/>  
    <script type="text/javascript">
    	dojo.require('dijit.TitlePane');
    	dojo.require('dijit.form.FilteringSelect');
    	dojo.require('dijit.form.DateTextBox');
    	dojo.require('dijit.form.SimpleTextarea');
    	dojo.require('dojo.data.ItemFileReadStore');

    	dojo.addOnLoad(
			function(){
				if (dijit.byId("_survivalStatus_id").value != 'DEAD')
			  	{
				  	// hide death values as not dead
					dojo.style(dijit.byId("roo_child_dateOfDeath").domNode, "display", "none");
					dojo.style(dijit.byId("roo_child_causeOfDeath").domNode, "display", "none");
					dojo.style(dijit.byId("roo_child_causeOfDeathOther").domNode, "display", "none");				  
			  	}
				else if (dijit.byId("_causeOfDeath_id").value != 'OTHER_DIABETES_RELATED_CONDITION')
				{
					// hide death other as other not selected
					dojo.style(dijit.byId("roo_child_causeOfDeathOther").domNode, "display", "none");
				}

				if (dijit.byId("_diabetesType_id").value != 'OTHER')
			  	{
					dojo.style(dijit.byId("roo_child_diabetesTypeOther").domNode, "display", "none");
			  	}
			}
		);  

		function unloadMess(){
		    mess = "You haven't saved yet!"
		    return mess;
		}
	
		function setBunload(on){
		    window.onbeforeunload = (on) ? unloadMess : null;
		}
	
		setBunload(true);    	
    </script>
    <div id="_title_div">
        <spring:message code="label.child" var="entity_label"/>
        <spring:message arguments="${entity_label}" code="entity.create" var="title_msg"/>
        <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_title_div', widgetType : 'dijit.TitlePane', widgetAttrs : {title: '${title_msg}'}})); </script>
        <spring:url value="/child" var="form_url"/>
        <spring:message code="field.invalid.date" var="field_invalid_date"/>
        <spring:message code="field.date.tooltip" var="field_date_tooltip"/>        
        <form:form action="${form_url}" method="POST" modelAttribute="child">
            <form:errors cssClass="errors" delimiter="&lt;p/&gt;"/>
            <form:hidden id="_individualId_id" path="individualId"/>
            <div id="roo_child_initials">
                <label for="_initials_id"><spring:message code="child.initials"/></label>
                <form:input cssStyle="width:250px" id="_initials_id" maxlength="30" path="initials" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_initials_error_id" path="initials"/>
                <spring:message arguments="Initials" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Initials," code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_initials_id', widgetType : 'dijit.form.ValidationTextBox', widgetAttrs : {promptMessage: '${field_validation}', invalidMessage: '${field_invalid}', required : false}})); </script>
            </div>
            <br/>
            <div id="roo_child_name">
                <label for="_name_id"><spring:message code="child.firstName"/></label>
                <form:input cssStyle="width:250px" id="_name_id" maxlength="30" path="name" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_name_error_id" path="name"/>
                <spring:message arguments="Name" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Name,(${field_required})" code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_name_id', widgetType : 'dijit.form.ValidationTextBox', widgetAttrs : {promptMessage: '${field_validation}', invalidMessage: '${field_invalid}', required : true}})); </script>
            </div>
            <br/>
            <div id="roo_child_lastName">
                <label for="_lastName_id"><spring:message code="child.lastName"/></label>
                <form:input cssStyle="width:250px" id="_lastName_id" maxlength="30" path="lastName" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_lastName_error_id" path="lastName"/>
                <spring:message arguments="Last Name" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Last Name,(${field_required})" code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_lastName_id', widgetType : 'dijit.form.ValidationTextBox', widgetAttrs : {promptMessage: '${field_validation}', invalidMessage: '${field_invalid}', required : true}})); </script>
            </div>
            <br/>            
            <div id="roo_child_country">
                <c:if test="${not empty countrys}">
                    <label for="_country_id"><spring:message code="child.country"/></label>
                    <form:select cssStyle="width:250px" id="_country_id" path="country">
                    	<form:option value=""></form:option>
                        <form:options itemValue="id" items="${countrys}"/>
                    </form:select>
                    <br/>
                    <form:errors cssClass="errors" id="_country_error_id" path="country"/>
                    <script type="text/javascript">Spring.addDecoration(
                            new Spring.ElementDecoration({
                                elementId : '_country_id', 
                                widgetType: 'dijit.form.FilteringSelect', 
                                widgetAttrs : {hasDownArrow : true,
                            	onChange : function(newValue) {
                            		if (newValue == null || newValue == '')
                                		return;
                            		console.debug(document.location.href);
	                        		var centreSelect = dijit.byId('_centre_id');
	                        		centreSelect.setDisabled(true);

	                        		// after save and there are errors the url changes
	                        		var url = 'ajax/centre/' + newValue;
	                        		// first create url
	                        		if (document.location.href.indexOf('/form') != -1)
		                        		url = '../ajax/centre/' + newValue;
	                        			                        		
									var newDataStore = new dojo.data.ItemFileReadStore({
										id: 'centres',
										urlPreventCache : true, 
										url: url});
									
									newDataStore.data = newDataStore._jsonData;
									centreSelect.store = newDataStore;

									 var resetCentres = function(items, request){
										 centreSelect.setDisplayedValue("");
										 centreSelect.setDisabled(false);									 
									 }

									 var gotError = function(error, request){
									 displayError("The request to the centre has failed. " + error);
									 }

									 newDataStore.fetch({onComplete: resetCentres, onError: gotError});
	                    		}
                                }})); </script>
                </c:if>
            </div>
            <br/>
            <div id="roo_child_centre">                
	            <label for="_centre_id"><spring:message code="child.centre"/></label>
	            <form:select cssStyle="width:250px" id="_centre_id" path="centre">
                	<form:options itemValue="id" items="${diabetescentres}"/>
	            </form:select>
	            <br/>
	            <form:errors cssClass="errors" id="_centre_error_id" path="centre"/>
	            <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_centre_id', widgetType: 'dijit.form.FilteringSelect', widgetAttrs : {hasDownArrow : true}})); </script>                
            </div>
            <br/>
            <div id="roo_child_localMedicalNumber">
                <label for="_localMedicalNumber_id"><spring:message code="child.localMedicalNumber"/></label>
                <form:input cssStyle="width:250px" id="_localMedicalNumber_id" maxlength="20" path="localMedicalNumber" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_localMedicalNumber_error_id" path="localMedicalNumber"/>
                <spring:message arguments="Ethnic Group" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Ethnic Group," code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_localMedicalNumber_id', widgetType : 'dijit.form.ValidationTextBox', widgetAttrs : {promptMessage: '${field_validation}', invalidMessage: '${field_invalid}', required : false}})); </script>
            </div>
            <br/>            
            <div id="roo_child_ethnicGroup">
                <label for="_ethnicGroup_id"><spring:message code="child.ethnicGroup"/></label>
                <form:input cssStyle="width:250px" id="_ethnicGroup_id" maxlength="20" path="ethnicGroup" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_ethnicGroup_error_id" path="ethnicGroup"/>
                <spring:message arguments="Ethnic Group" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Ethnic Group," code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_ethnicGroup_id', widgetType : 'dijit.form.ValidationTextBox', widgetAttrs : {promptMessage: '${field_validation}', invalidMessage: '${field_invalid}', required : false}})); </script>
            </div>
            <br/>
            <div id="roo_child_sex">
                <label for="_sex_id"><spring:message code="child.sex"/></label>
                <form:select cssStyle="width:250px" id="_sex_id" path="sex">
                	<form:option value=""></form:option>
                	<form:options items="${sextype_enum}" itemLabel="label"/>
                </form:select>
                <br/>
                <form:errors cssClass="errors" id="_sex_error_id" path="sex"/>                
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_sex_id', widgetType: 'dijit.form.FilteringSelect', widgetAttrs : {hasDownArrow : true}})); </script>
            </div>
            <br/>
            <div id="roo_child_survivalStatus">
                <label for="_survivalStatus_id"><spring:message code="child.survivalStatus"/></label>
                <form:select cssStyle="width:250px" id="_survivalStatus_id" path="survivalStatus">
                	<form:option value=""></form:option>
                	<form:options items="${survivalstatustype_enum}" itemLabel="label"/>
                </form:select>
                <br/>
                <form:errors cssClass="errors" id="_survivalStatus_error_id" path="survivalStatus"/>                
                <script type="text/javascript">Spring.addDecoration(
                        new Spring.ElementDecoration({
                            elementId : '_survivalStatus_id', 
                            widgetType: 'dijit.form.FilteringSelect', 
                            widgetAttrs : {hasDownArrow : true,
				                onChange : function(newValue) {
			                		if (newValue == 'DEAD')
			                		{
				                		dojo.style(dijit.byId("roo_child_dateOfDeath").domNode, "display", "block");
				                		dojo.style(dijit.byId("roo_child_causeOfDeath").domNode, "display", "block");
				                		if (dijit.byId("_causeOfDeath_id").value == 'OTHER_DIABETES_RELATED_CONDITION')
				                			dojo.style(dijit.byId("roo_child_causeOfDeathOther").domNode, "display", "block");
			                		}
			                		else
			                		{
			                			dojo.style(dijit.byId("roo_child_dateOfDeath").domNode, "display", "none");
			                			dojo.style(dijit.byId("roo_child_causeOfDeath").domNode, "display", "none");
			                			dojo.style(dijit.byId("roo_child_causeOfDeathOther").domNode, "display", "none");
			                		}
                        		}
                			}                            
                       	})); 
				</script>
            </div>           
            <br/>
            <div id="roo_child_dateOfDeath">
                <label for="_dateOfDeath_id"><spring:message code="child.dateOfDeath"/></label>
                <form:input cssStyle="width:250px" id="_dateOfDeath_id" maxlength="30" path="dateOfDeath" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_dateOfDeath_error_id" path="dateOfDeath"/>
                <spring:message arguments="Date Of Death" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Date Of Death," code="field.simple.validation" var="field_validation"/>              
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_dateOfDeath_id', widgetType : 'dijit.form.DateTextBox', widgetAttrs : {promptMessage: '${field_date_tooltip}', invalidMessage: '${field_invalid_date}', popupClass: '', constraints: {max: new Date(), datePattern : '${child_dateOfDeath_date_format}', required : false}, datePattern : '${child_dateOfDeath_date_format}'}})); </script>
            	<br/>                
            </div>
            <script type="text/javascript">Spring.addDecoration(
                    new Spring.ElementDecoration({
                        elementId : 'roo_child_dateOfDeath', 
                        widgetType: 'dijit.layout.ContentPane'})); 
            </script>             
            <div id="roo_child_causeOfDeath">
                <label for="_causeOfDeath_id"><spring:message code="child.causeOfDeath"/></label>
                <form:select cssStyle="width:250px" id="_causeOfDeath_id" path="causeOfDeath">
                	<form:option value=""></form:option>
                	<form:options items="${causeofdeathtype_enum}" itemLabel="label"/>
                </form:select>
                <br/>
                <form:errors cssClass="errors" id="_causeOfDeath_error_id" path="causeOfDeath"/>                
                <script type="text/javascript">Spring.addDecoration(
                        new Spring.ElementDecoration({
                            elementId : '_causeOfDeath_id', 
                            widgetType: 'dijit.form.FilteringSelect', 
                            widgetAttrs : {hasDownArrow : true,
	                            onChange : function(newValue) {
			                		if (newValue == 'OTHER_DIABETES_RELATED_CONDITION')
			                		{
				                		dojo.style(dijit.byId("roo_child_causeOfDeathOther").domNode, "display", "block");
			                		}
			                		else
			                		{
			                			dojo.style(dijit.byId("roo_child_causeOfDeathOther").domNode, "display", "none");
			                		}
	                    		}}                  
                        }));
				</script>
            	<br/>                
            </div>
            <script type="text/javascript">Spring.addDecoration(
                    new Spring.ElementDecoration({
                        elementId : 'roo_child_causeOfDeath', 
                        widgetType: 'dijit.layout.ContentPane'})); 
            </script>             
            <div id="roo_child_causeOfDeathOther">
                <label for="_causeOfDeathOther_id"><spring:message code="child.causeOfDeathOther"/></label>
                <form:textarea cssStyle="width:250px" id="_causeOfDeathOther_id" path="causeOfDeathOther"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_causeOfDeathOther_id', widgetType: 'dijit.form.SimpleTextarea', widgetAttrs: {}})); </script>
                <br/>
                <form:errors cssClass="errors" id="_causeOfDeathOther_error_id" path="causeOfDeathOther"/>
            	<br/>                
            </div>
            <script type="text/javascript">Spring.addDecoration(
                    new Spring.ElementDecoration({
                        elementId : 'roo_child_causeOfDeathOther', 
                        widgetType: 'dijit.layout.ContentPane'})); 
            </script>             
            <div id="roo_child_dateOfRegistration">
                <label for="_dateOfRegistration_id"><spring:message code="child.dateOfReg"/></label>
                <form:input cssStyle="width:250px" id="_dateOfRegistration_id" maxlength="30" path="dateOfRegistration" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_dateOfRegistration_error_id" path="dateOfRegistration"/>
                <spring:message arguments="Date Of Registration" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Date Of Registration,(${field_required})" code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_dateOfRegistration_id', widgetType : 'dijit.form.DateTextBox', widgetAttrs : {promptMessage: '${field_validation}', constraints: {max: new Date(), datePattern : '${child_dateOfRegistration_date_format}', required : false}, datePattern : '${child_dateOfRegistration_date_format}'}})); </script>
            </div>
            <br/>
            <div id="roo_child_dateOfBirth">
                <label for="_dateOfBirth_id"><spring:message code="child.dateOfBirth"/></label>
                <form:input cssStyle="width:250px" id="_dateOfBirth_id" maxlength="30" path="dateOfBirth" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_dateOfBirth_error_id" path="dateOfBirth"/>
                <spring:message arguments="Date Of Birth" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Date Of Birth,(${field_required})" code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">
                	Spring.addDecoration(
                        	new Spring.ElementDecoration({
                            	elementId : '_dateOfBirth_id', 
                            	widgetType : 'dijit.form.DateTextBox', 
                            	widgetAttrs : {
                            		promptMessage: '${field_date_tooltip}', 
                            		invalidMessage: '${field_invalid_date}', 
                            		popupClass: '', 
                            		constraints: {max: new Date(), datePattern : '${child_dateOfBirth_date_format}', required : false},
                            		datePattern : '${child_dateOfBirth_date_format}',
                                   	onChange : function(newValue) {   
                               			console.debug(" got click!");                                		 	
                                   		var dob = dijit.byId("_dateOfBirth_id").attr("value");
                                   		var dd = dijit.byId("_diabetesDiagnosed_id").attr("value");
                                   		 
                                   		if (dob != null &amp;&amp; dd != null)
                                   		{
                                   			var dobStr = dojo.date.stamp.toISOString(dob, {selector:'date'});
                                   			var ddStr = dojo.date.stamp.toISOString(dd, {selector:'date'});
                                   			
                                   		    var ageURL = '../ajax/ageAtDiagnosis/' + ddStr + '/' + dobStr;
                                   		 	if (document.location.href.indexOf('/form') == -1)
                                   		 		ageURL = 'ajax/ageAtDiagnosis/' + ddStr + '/' + dobStr;
                                   		 	
                                   		    console.debug(" Doing Ajax call for Age at diagnosis" + ageURL);
                                   		    dojo.xhrGet( { // 
                                   		        // The following URL must match that used to test the server.
                                   		        url: ageURL, 
                                   		        preventCache: true,
                                   		        handleAs: "text",
                                   		        timeout: 10000, // Time in milliseconds

                                   		        // The LOAD function will be called on a successful response.
                                   		        load: function(response, ioArgs) { 
                                   		          console.log("got back response ", response);
                                   		          
                                   		          dijit.byId("_ageAtDiagnosis_id").setValue(response);
                                   		          return response; // 
                                   		        },

                                   		        // The ERROR function will be called in an error case.
                                   		        error: function(response, ioArgs) { // 
                                   		          console.error(response," - HTTP status code: ", ioArgs.xhr.status); //
                                   		          return response; // 
                                   		          }
                                   		        }); 
	                           			}
                                    }
                                 }
                            })); 
                 </script>
            </div>
            <br/>
            <div id="roo_child_diabetesDiagnosed">
                <label for="_diabetesDiagnosed_id"><spring:message code="child.diabetesDiagnosed"/></label>
                <form:input cssStyle="width:250px" id="_diabetesDiagnosed_id" maxlength="30" path="diabetesDiagnosed" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_diabetesDiagnosed_error_id" path="diabetesDiagnosed"/>
                <spring:message arguments="Diabetes Diagnosed" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Diabetes Diagnosed,(${field_required})" code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">
                	Spring.addDecoration(
                        new Spring.ElementDecoration({
                            elementId : '_diabetesDiagnosed_id', 
                            widgetType : 'dijit.form.DateTextBox', 
                            widgetAttrs : {
                            	promptMessage: '${field_date_tooltip}', 
                            	invalidMessage: '${field_invalid_date}', 
                            	popupClass: '', 
                            	constraints: {max: new Date(), datePattern : '${child_diabetesDiagnosed_date_format}', required : false}, 
                            	datePattern : '${child_diabetesDiagnosed_date_format}',
                            	onChange : function(newValue) {   
                           			console.debug(" got click!");                                		 	
                               		var dob = dijit.byId("_dateOfBirth_id").attr("value");
                               		var dd = dijit.byId("_diabetesDiagnosed_id").attr("value");
                               		 
                               		if (dob != null &amp;&amp; dd != null)
                               		{
                               			var dobStr = dojo.date.stamp.toISOString(dob, {selector:'date'});
                               			var ddStr = dojo.date.stamp.toISOString(dd, {selector:'date'});
                               			
                               		    var ageURL = '../ajax/ageAtDiagnosis/' + ddStr + '/' + dobStr;
                               		 	if (document.location.href.indexOf('/form') == -1)
                               		 		ageURL = 'ajax/ageAtDiagnosis/' + ddStr + '/' + dobStr;
                               		 	
                               		    console.debug(" Doing Ajax call for Age at diagnosis" + ageURL);
                               		    dojo.xhrGet( { // 
                               		        // The following URL must match that used to test the server.
                               		        url: ageURL, 
                               		        preventCache: true,
                               		        handleAs: "text",
                               		        timeout: 10000, // Time in milliseconds

                               		        // The LOAD function will be called on a successful response.
                               		        load: function(response, ioArgs) { 
                               		          console.log("got back response ", response);
                               		          
                               		          dijit.byId("_ageAtDiagnosis_id").setValue(response);
                               		          return response; // 
                               		        },

                               		        // The ERROR function will be called in an error case.
                               		        error: function(response, ioArgs) { // 
                               		          console.error(response," - HTTP status code: ", ioArgs.xhr.status); //
                               		          return response; // 
                               		          }
                               		        }); 
                           			}
                                }}})); 
                </script>
            </div>
            <br/>
            <div id="roo_child_insulinSince">
                <label for="_insulinSince_id"><spring:message code="child.insulinStarted"/></label>
                <form:input cssStyle="width:250px" id="_insulinSince_id" maxlength="30" path="insulinSince" size="0"/>
                <br/>
                <form:errors cssClass="errors" id="_insulinSince_error_id" path="insulinSince"/>
                <spring:message arguments="Insulin Since" code="field.invalid" var="field_invalid"/>
                <spring:message code="field.required" var="field_required"/>
                <spring:message argumentSeparator="," arguments="Insulin Since,(${field_required})" code="field.simple.validation" var="field_validation"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_insulinSince_id', widgetType : 'dijit.form.DateTextBox', widgetAttrs : {promptMessage: '${field_date_tooltip}', invalidMessage: '${field_invalid_date}', popupClass: '', constraints: {max: new Date(), datePattern : '${child_insulinSince_date_format}', required : false}, datePattern : '${child_insulinSince_date_format}'}})); </script>
            </div>
            <br/>
            <div id="roo_child_diabetesType">
                <label for="_diabetesType_id"><spring:message code="child.diabetesType"/></label>
                <form:select cssStyle="width:250px" id="_diabetesType_id" path="diabetesType">
                	<form:option value=""></form:option>
                	<form:options items="${diabetestype_enum}" itemLabel="label"/>
                </form:select>
                <br/>
                <form:errors cssClass="errors" id="_diabetesType_error_id" path="diabetesType"/>                
                <script type="text/javascript">Spring.addDecoration(
                        new Spring.ElementDecoration({
                            elementId : '_diabetesType_id', 
                            widgetType: 'dijit.form.FilteringSelect', 
                            widgetAttrs : {hasDownArrow : true,
                            onChange : function(newValue) {
		                		if (newValue == 'OTHER')
		                		{
			                		dojo.style(dijit.byId("roo_child_diabetesTypeOther").domNode, "display", "block");
		                		}
		                		else
		                		{
		                			dojo.style(dijit.byId("roo_child_diabetesTypeOther").domNode, "display", "none");
		                		}
                			}
                		}
                	})); 
                </script>
            </div>
            <br/>
            <div id="roo_child_diabetesTypeOther">
                <label for="_diabetesTypeOther_id"><spring:message code="child.diabetesTypeOther"/></label>
                <form:textarea cssStyle="width:250px" id="_diabetesTypeOther_id" path="diabetesTypeOther"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_diabetesTypeOther_id', widgetType: 'dijit.form.SimpleTextarea', widgetAttrs: {}})); </script>
                <br/>
                <form:errors cssClass="errors" id="_diabetesTypeOther_error_id" path="diabetesTypeOther"/>
                <br/>
            </div>
            <script type="text/javascript">Spring.addDecoration(
                    new Spring.ElementDecoration({
                        elementId : 'roo_child_diabetesTypeOther', 
                        widgetType: 'dijit.layout.ContentPane'})); 
            </script>            
            <form:hidden id="_createdOn_id" path="createdOn"/>
            <form:hidden id="_updatedOn_id" path="updatedOn"/>
            <form:hidden id="_isDeleted_id" path="isDeleted"/>
            <div id="roo_child_distanceLivesFromCentre">
                <label for="_distanceLivesFromCentre_id"><spring:message code="child.distanceFromCentre"/></label>
                <form:select cssStyle="width:250px" id="_distanceLivesFromCentre_id" path="distanceLivesFromCentre">
					<form:option value=""></form:option>
                	<form:options items="${distancetype_enum}" itemLabel="label"/>
                </form:select>                
                <br/>
                <form:errors cssClass="errors" id="_distanceLivesFromCentre_error_id" path="distanceLivesFromCentre"/>                
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_distanceLivesFromCentre_id', widgetType: 'dijit.form.FilteringSelect', widgetAttrs : {hasDownArrow : true}})); </script>
            </div>
            <br/>
            <div id="roo_clinicalRecord_ageAtDiagnosis">
                <label for="_exactAge_id"><spring:message code="child.ageAtDiagnosis"/></label>
                <form:input cssStyle="width:250px; border:0" id="_ageAtDiagnosis_id" maxlength="30" path="ageAtDiagnosis" size="0"/>
               	<br/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ElementDecoration({elementId : '_ageAtDiagnosis_id', widgetType : 'dijit.form.ValidationTextBox', widgetAttrs : {readOnly : true}})); </script>
            </div>
            <br/> 
            <div class="submit" id="roo_child_submit">
                <spring:message code="button.save" var="save_button"/>
                <script type="text/javascript">Spring.addDecoration(new Spring.ValidateAllDecoration({elementId:'proceed', event:'onclick'}));</script>
                <input id="proceed" type="submit" value="${save_button}" onclick="setBunload(false);"/>
            </div>
        </form:form>
    </div>
</div>
